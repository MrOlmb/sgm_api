{
  "info": {
    "name": "SGM Backend API",
    "description": "Complete API collection for Association des Gabonais du Congo - Member Management System\n\n**Authors:** Elvis Destin OLEMBE & Mond√©sir NTSOUMOU\n\n**Setup Instructions:**\n1. Import the environment file (SGM-Environment.json)\n2. Set your Clerk authentication token in the environment\n3. Start your local server: `npm run dev`\n4. Run the tests in order\n\n**Base URL:** {{base_url}}\n**Version:** 1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "sgm-backend-api-2025",
    "_collection_link": "https://documenter.getpostman.com/view/sgm-backend"
  },
  "item": [
    {
      "name": "üîß System & Health",
      "description": "System health checks and basic information endpoints",
      "item": [
        {
          "name": "API Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api",
              "host": ["{{base_url}}"],
              "path": ["api"]
            },
            "description": "Get basic API information and available endpoints"
          },
          "response": []
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/health",
              "host": ["{{base_url}}"],
              "path": ["api", "health"]
            },
            "description": "Basic health check endpoint"
          },
          "response": []
        },
        {
          "name": "Detailed Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/health/detailed",
              "host": ["{{base_url}}"],
              "path": ["api", "health", "detailed"]
            },
            "description": "Detailed health check with database performance metrics"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîê Authentication",
      "description": "Authentication and user session management endpoints",
      "item": [
        {
          "name": "Auth Test (Public)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/test",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "test"]
            },
            "description": "Test authentication status without requiring auth"
          },
          "response": []
        },
        {
          "name": "Get Current User (Protected)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/me",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "me"]
            },
            "description": "Get current authenticated user information from Clerk and database"
          },
          "response": []
        },
        {
          "name": "User Status (Protected)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/status",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "status"]
            },
            "description": "Check if user exists in database and their registration status"
          },
          "response": []
        },
        {
          "name": "Sign Up (After Clerk)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/auth/signup",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "signup"]
            },
            "description": "Complete signup process after Clerk authentication - creates user in database"
          },
          "response": []
        },
        {
          "name": "Sign In (After Clerk)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/auth/signin",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "signin"]
            },
            "description": "Complete signin process after Clerk authentication - updates login status"
          },
          "response": []
        },
        {
          "name": "Sign Out",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/auth/signout",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "signout"]
            },
            "description": "Sign out and cleanup session data"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üë§ Member Registration",
      "description": "Member registration and profile management",
      "item": [
        {
          "name": "Complete Member Registration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data",
                "disabled": true
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "name",
                  "value": "Jean Claude MBONGO",
                  "description": "Full name of the member",
                  "type": "text"
                },
                {
                  "key": "id_number",
                  "value": "GAB2024001",
                  "description": "Government ID number (letters and numbers only)",
                  "type": "text"
                },
                {
                  "key": "email",
                  "value": "jean.mbongo@example.com",
                  "description": "Email address",
                  "type": "text"
                },
                {
                  "key": "phone",
                  "value": "+241066123456",
                  "description": "Phone number with country code (optional)",
                  "type": "text"
                },
                {
                  "key": "address",
                  "value": "Libreville, Gabon",
                  "description": "Current address (optional)",
                  "type": "text"
                },
                {
                  "key": "dob",
                  "value": "1990-05-15",
                  "description": "Date of birth YYYY-MM-DD (optional, must be 18-100 years old)",
                  "type": "text"
                },
                {
                  "key": "id_type",
                  "value": "PASSPORT",
                  "description": "Type of ID document (PASSPORT, NATIONAL_ID, OTHER)",
                  "type": "text"
                },
                {
                  "key": "id_front_photo",
                  "description": "Front side of ID document (JPEG/PNG, max 5MB) - REQUIRED",
                  "type": "file"
                },
                {
                  "key": "id_back_photo",
                  "description": "Back side of ID document (JPEG/PNG, max 5MB) - REQUIRED",
                  "type": "file"
                },
                {
                  "key": "selfie_photo",
                  "description": "Selfie photo (JPEG/PNG, max 5MB) - REQUIRED",
                  "type": "file"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/register",
              "host": ["{{base_url}}"],
              "path": ["api", "register"]
            },
            "description": "Complete member registration with required documents. Must be authenticated with Clerk first and have called /api/auth/signup."
          },
          "response": []
        },
        {
          "name": "Get Registration Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/register/status",
              "host": ["{{base_url}}"],
              "path": ["api", "register", "status"]
            },
            "description": "Get current user's registration status and next required actions"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üë• Member Management",
      "description": "Member management endpoints for administrators",
      "item": [
        {
          "name": "List All Members (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/members?status=PENDING&limit=50&offset=0",
              "host": ["{{base_url}}"],
              "path": ["api", "members"],
              "query": [
                {
                  "key": "status",
                  "value": "PENDING",
                  "description": "Filter by status: PENDING, APPROVED, REJECTED"
                },
                {
                  "key": "limit",
                  "value": "50",
                  "description": "Number of members to return"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Pagination offset"
                }
              ]
            },
            "description": "Get list of all members (Secretary/President only)"
          },
          "response": []
        },
        {
          "name": "Approve Member",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"APPROVED\",\n  \"reason\": \"Documents valid√©s, membre accept√© dans l'association\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/members/{{member_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "members", "{{member_id}}"]
            },
            "description": "Approve a pending member (Secretary/President only)"
          },
          "response": []
        },
        {
          "name": "Reject Member",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"REJECTED\",\n  \"reason\": \"Documents non conformes. Veuillez soumettre des documents valides.\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/members/{{member_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "members", "{{member_id}}"]
            },
            "description": "Reject a pending member (Secretary/President only)"
          },
          "response": []
        },
        {
          "name": "Assign Form Code",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"form_code\": \"Gabon/SGMAssociation/001\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/members/{{member_id}}/form-code",
              "host": ["{{base_url}}"],
              "path": ["api", "members", "{{member_id}}", "form-code"]
            },
            "description": "Assign a form code to an approved member (Secretary/President only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìÑ Signatures",
      "description": "President signature management",
      "item": [
        {
          "name": "Upload President Signature",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "signature",
                  "description": "President signature image (PNG/JPEG, max 2MB)",
                  "type": "file"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/signatures",
              "host": ["{{base_url}}"],
              "path": ["api", "signatures"]
            },
            "description": "Upload president signature (President only)"
          },
          "response": []
        },
        {
          "name": "Get Active Signature",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/signatures/active",
              "host": ["{{base_url}}"],
              "path": ["api", "signatures", "active"]
            },
            "description": "Get the currently active president signature"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üñºÔ∏è Photos & Documents",
      "description": "Member photo and document access",
      "item": [
        {
          "name": "Get Member Photos",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/photos/{{member_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "photos", "{{member_id}}"]
            },
            "description": "Get member's ID photos and selfie (Secretary/President only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üéØ QR Code & Verification",
      "description": "QR code generation and member verification",
      "item": [
        {
          "name": "Verify Member (QR Code)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/verify/{{member_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "verify", "{{member_id}}"]
            },
            "description": "Verify member using QR code scan (Public endpoint)"
          },
          "response": []
        },
        {
          "name": "Generate Member QR Code",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/members/{{member_id}}/qr-code",
              "host": ["{{base_url}}"],
              "path": ["api", "members", "{{member_id}}", "qr-code"]
            },
            "description": "Generate QR code for approved member (Secretary/President only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üë§ Member Profile",
      "description": "Member's own profile access",
      "item": [
        {
          "name": "Get My Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "profile"]
            },
            "description": "Get authenticated member's own profile and card"
          },
          "response": []
        },
        {
          "name": "Download My Card",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/profile/card?format=pdf",
              "host": ["{{base_url}}"],
              "path": ["api", "profile", "card"],
              "query": [
                {
                  "key": "format",
                  "value": "pdf",
                  "description": "Card format: pdf or png"
                }
              ]
            },
            "description": "Download member's digital card as PDF or image"
          },
          "response": []
        }
      ]
    },
    {
      "name": "üß™ Test Data",
      "description": "Endpoints for creating test data (Development only)",
      "item": [
        {
          "name": "Seed Test Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"create_test_users\": true,\n  \"user_count\": 5\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/test/seed",
              "host": ["{{base_url}}"],
              "path": ["api", "test", "seed"]
            },
            "description": "Create test data for development (Development only)"
          },
          "response": []
        },
        {
          "name": "Reset Test Database",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{clerk_token}}",
                "description": "Clerk authentication token",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/test/reset",
              "host": ["{{base_url}}"],
              "path": ["api", "test", "reset"]
            },
            "description": "Reset all test data (Development only - DANGEROUS)"
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000"
    },
    {
      "key": "member_id",
      "value": "1"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{clerk_token}}",
        "type": "string"
      }
    ]
  }
}