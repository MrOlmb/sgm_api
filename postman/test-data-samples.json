{
  "sample_data": {
    "description": "Sample data for testing SGM Backend API endpoints",
    "version": "1.0.0",
    "test_scenarios": {
      "member_registration": [
        {
          "name": "Valid Gabon Member",
          "data": {
            "name": "Marie Claire NZOMO",
            "id_number": "GAB2024002",
            "email": "marie.nzomo@example.com",
            "phone": "+241066234567",
            "address": "Port-Gentil, Gabon",
            "dob": "1988-03-22",
            "id_type": "NATIONAL_ID"
          }
        },
        {
          "name": "Valid Congo Member",
          "data": {
            "name": "Patrick OKEMBA",
            "id_number": "CGO2024003",
            "email": "patrick.okemba@example.com",
            "phone": "+242066345678",
            "address": "Brazzaville, Congo",
            "dob": "1985-07-10",
            "id_type": "PASSPORT"
          }
        },
        {
          "name": "Young Member",
          "data": {
            "name": "Sarah MOUNDOUNGA",
            "id_number": "GAB2024004",
            "email": "sarah.moundounga@example.com",
            "phone": "+241066456789",
            "address": "Franceville, Gabon",
            "dob": "1995-12-05",
            "id_type": "NATIONAL_ID"
          }
        },
        {
          "name": "Senior Member",
          "data": {
            "name": "Joseph MASSALA",
            "id_number": "GAB2024005",
            "email": "joseph.massala@example.com",
            "phone": "+241066567890",
            "address": "Oyem, Gabon",
            "dob": "1965-11-30",
            "id_type": "PASSPORT"
          }
        }
      ],
      "invalid_registrations": [
        {
          "name": "Invalid Email Format",
          "data": {
            "name": "Test User",
            "id_number": "TEST001",
            "email": "invalid-email",
            "phone": "+241066123456",
            "id_type": "PASSPORT"
          },
          "expected_error": "Format d'email invalide"
        },
        {
          "name": "Missing Required Fields",
          "data": {
            "name": "Test User",
            "email": "test@example.com"
          },
          "expected_error": "Champs requis manquants"
        },
        {
          "name": "Invalid ID Type",
          "data": {
            "name": "Test User",
            "id_number": "TEST002",
            "email": "test2@example.com",
            "phone": "+241066123456",
            "id_type": "INVALID_TYPE"
          },
          "expected_error": "Type de pièce d'identité invalide"
        }
      ],
      "form_codes": [
        {
          "valid_codes": [
            "Gabon/SGMAssociation/001",
            "Congo/SGMAssociation/001",
            "Gabon/DiasporaGabonaise/001",
            "Congo/DiasporaGabonaise/001"
          ]
        },
        {
          "invalid_codes": [
            "invalid-format",
            "GAB001",
            "Gabon/SGM",
            "gabon/sgm/001"
          ]
        }
      ],
      "status_updates": [
        {
          "approval": {
            "status": "APPROVED",
            "reason": "Documents validés avec succès. Membre accepté dans l'association."
          }
        },
        {
          "rejection_insufficient_docs": {
            "status": "REJECTED",
            "reason": "Documents fournis insuffisants ou non conformes."
          }
        },
        {
          "rejection_duplicate": {
            "status": "REJECTED",
            "reason": "Membre déjà enregistré dans le système."
          }
        },
        {
          "rejection_age": {
            "status": "REJECTED",
            "reason": "Age minimum requis non respecté."
          }
        }
      ]
    },
    "test_users": {
      "president": {
        "name": "President Test Account",
        "email": "president@sgm-gabon.org",
        "role": "PRESIDENT",
        "permissions": ["all"]
      },
      "secretary": {
        "name": "Secretary Test Account", 
        "email": "secretary@sgm-gabon.org",
        "role": "SECRETARY",
        "permissions": ["members:read", "members:approve", "members:reject", "form_codes:assign"]
      },
      "member": {
        "name": "Regular Member",
        "email": "member@example.com",
        "role": "MEMBER",
        "permissions": ["own_profile:read", "own_card:download"]
      }
    },
    "registration_workflow": {
      "step_1_clerk_signup": "User completes Clerk signup on frontend",
      "step_2_backend_signup": "curl -X POST http://localhost:3001/api/auth/signup -H \"Authorization: Bearer YOUR_CLERK_TOKEN\"",
      "step_3_registration_status": "curl -X GET http://localhost:3001/api/register/status -H \"Authorization: Bearer YOUR_CLERK_TOKEN\"",
      "step_4_complete_registration": "curl -X POST http://localhost:3001/api/register -H \"Authorization: Bearer YOUR_CLERK_TOKEN\" -F \"name=Jean MBONGO\" -F \"email=jean@example.com\" -F \"id_number=GAB001\" -F \"phone=+241066123456\" -F \"id_type=PASSPORT\" -F \"id_front_photo=@front.jpg\" -F \"id_back_photo=@back.jpg\" -F \"selfie_photo=@selfie.jpg\""
    },
    "curl_examples": {
      "health_check": "curl -X GET http://localhost:3001/api/health",
      "auth_test": "curl -X GET http://localhost:3001/api/auth/test",
      "auth_status": "curl -X GET http://localhost:3001/api/auth/status",
      "signup_after_clerk": "curl -X POST http://localhost:3001/api/auth/signup -H \"Authorization: Bearer YOUR_TOKEN\"",
      "signin_after_clerk": "curl -X POST http://localhost:3001/api/auth/signin -H \"Authorization: Bearer YOUR_TOKEN\"",
      "get_user_profile": "curl -X GET http://localhost:3001/api/auth/me -H \"Authorization: Bearer YOUR_TOKEN\"",
      "register_status": "curl -X GET http://localhost:3001/api/register/status -H \"Authorization: Bearer YOUR_TOKEN\"",
      "complete_registration": "curl -X POST http://localhost:3001/api/register -H \"Authorization: Bearer YOUR_TOKEN\" -F \"name=Jean MBONGO\" -F \"email=jean@example.com\" -F \"id_number=GAB001\" -F \"phone=+241066123456\" -F \"id_type=PASSPORT\" -F \"id_front_photo=@front.jpg\" -F \"id_back_photo=@back.jpg\" -F \"selfie_photo=@selfie.jpg\"",
      "approve_member": "curl -X PATCH http://localhost:3001/api/members/1 -H \"Authorization: Bearer YOUR_TOKEN\" -H \"Content-Type: application/json\" -d '{\"status\":\"APPROVED\",\"reason\":\"Documents validés\"}'",
      "assign_form_code": "curl -X POST http://localhost:3001/api/members/1/form-code -H \"Authorization: Bearer YOUR_TOKEN\" -H \"Content-Type: application/json\" -d '{\"form_code\":\"Gabon/SGMAssociation/001\"}'"
    },
    "testing_checklist": [
      {
        "category": "Basic Functionality",
        "tests": [
          "Server starts without errors",
          "Health check returns 200",
          "API info endpoint returns correct data",
          "Database connection works",
          "Authentication middleware functions"
        ]
      },
      {
        "category": "Authentication",
        "tests": [
          "Public endpoints work without auth",
          "Protected endpoints require auth token",
          "Invalid tokens are rejected",
          "User roles are properly enforced",
          "Session data is correctly parsed"
        ]
      },
      {
        "category": "Member Registration",
        "tests": [
          "Valid registration succeeds",
          "File uploads work correctly",
          "Input validation catches errors",
          "Duplicate registrations are prevented",
          "Email notifications are sent"
        ]
      },
      {
        "category": "Member Management",
        "tests": [
          "List members with pagination",
          "Filter members by status",
          "Approve/reject workflow works",
          "Form code assignment functions",
          "Audit logs are created"
        ]
      },
      {
        "category": "Security",
        "tests": [
          "Rate limiting is enforced",
          "File upload validation works",
          "SQL injection protection",
          "XSS protection headers",
          "CORS policy is correct"
        ]
      }
    ],
    "environment_specific": {
      "development": {
        "base_url": "http://localhost:3000",
        "bypass_auth": "true",
        "test_mode": "enabled",
        "file_upload_limit": "5MB"
      },
      "staging": {
        "base_url": "https://sgm-backend-staging.herokuapp.com",
        "bypass_auth": "false",
        "test_mode": "enabled",
        "file_upload_limit": "5MB"
      },
      "production": {
        "base_url": "https://sgm-backend-prod.herokuapp.com",
        "bypass_auth": "false",
        "test_mode": "disabled",
        "file_upload_limit": "5MB"
      }
    }
  }
}